{"ast":null,"code":"import _objectSpread from\"/workspaces/test-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import axios from'axios';import'bootstrap/dist/css/bootstrap.min.css';import'./App.css';import Header from'./Component/header';import FileUpload from'./Component/FileUpload';import{Spinner}from'react-bootstrap';import Toast from'react-bootstrap/Toast';import Modal from'react-bootstrap/Modal';import Footer from'./Component/Footer';// import Response from './Component/Response';\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[loader,setLoader]=useState(false);const[resType,setResType]=useState(\"review\");const[activeTab,setActiveTab]=useState(\"test-case-generation\");// Default tab is now Test Case Generation\nconst[notification,setNotification]=useState({show:false,body:\"\"});const[response,setResponse]=useState([]);const[suggestions,setSuggestions]=useState([]);// States for Code Generation and Code Conversion\nconst[codeGenForm,setCodeGenForm]=useState({technologyType:'',framework:'',repositoryUrl:'',userRequirement:''});const[codeConvForm,setCodeConvForm]=useState({technologyType:'',sourceLanguage:'',destinationLanguage:'',repositoryUrl:'',additionalInstructions:''});// Modal states for Code Generation and Code Conversion results\nconst[codeGenModalShow,setCodeGenModalShow]=useState(false);const[codeConvModalShow,setCodeConvModalShow]=useState(false);const[codeGenResult,setCodeGenResult]=useState('');const[codeConvResult,setCodeConvResult]=useState('');// Framework options based on technology type\nconst frameworkOptions={Frontend:['React','Vue','JavaScript','Angular','HTML','CSS'],Backend:['Python','Java','ASP.NET','Django','Node.js','Spring Boot','PHP','Flask'],Database:['Oracle','PostgreSQL','MySQL','MongoDB','Redis','SQLite']};// const [apiResponse, setApiResponse] = useState([]);\nconst handleSubmit=(data,type,project_name,assigned_to,testCaseType)=>{//event.preventDefault();\nconsole.log(data);if(data.file.length){setLoader(true);let postData={user_story_description:data.userStory,file:data.file,application_type:type,project_name:project_name,assigned_to:assigned_to};if(testCaseType==='existing'){postData.testCaseType=testCaseType;postData.existingFile=data.existingFile;}axios.post(\"http://10.31.3.17:5000/generate-test-cases\",postData,{headers:{'Content-Type':'multipart/form-data','accept':'*/*'}}).then(res=>{console.log(res);setLoader(false);if(res.status===200){setNotification({show:true,body:res.data.message,type:'success'});setResponse(res.data.test_cases);setSuggestions(res.data.suggestions);setResponseShow(true);}else{setNotification({show:true,body:\"Something went wrong !!\",type:'danger'});}});}};// Handle Code Generation form submission\nconst handleCodeGenSubmit=e=>{e.preventDefault();setLoader(true);// Simulate API call - Replace this with your actual API call\nsetTimeout(()=>{setLoader(false);// Mock response - Replace with actual API response\nconst mockResult=\"// Generated \".concat(codeGenForm.framework,\" code for \").concat(codeGenForm.technologyType,\"\\n\\n\")+\"// Technology: \".concat(codeGenForm.technologyType,\"\\n\")+\"// Framework: \".concat(codeGenForm.framework,\"\\n\")+\"// Repository: \".concat(codeGenForm.repositoryUrl,\"\\n\\n\")+\"// User Requirements:\\n// \".concat(codeGenForm.userRequirement,\"\\n\\n\")+\"// Generated Code:\\nfunction generatedCode() {\\n  // Your generated code will appear here\\n  console.log('Code generated successfully!');\\n}\\n\\nmodule.exports = generatedCode;\";setCodeGenResult(mockResult);setCodeGenModalShow(true);setNotification({show:true,body:\"Code generated successfully!\",type:'success'});},2000);};// Handle technology type change and reset framework for Code Generation\nconst handleTechnologyChange=value=>{setCodeGenForm(_objectSpread(_objectSpread({},codeGenForm),{},{technologyType:value,framework:''// Reset framework when technology type changes\n}));};// Handle technology type change for Code Conversion\nconst handleConvTechnologyChange=value=>{setCodeConvForm(_objectSpread(_objectSpread({},codeConvForm),{},{technologyType:value,sourceLanguage:'',destinationLanguage:''}));};// Handle source language change for Code Conversion\nconst handleSourceLanguageChange=value=>{setCodeConvForm(_objectSpread(_objectSpread({},codeConvForm),{},{sourceLanguage:value,destinationLanguage:''// Reset destination language when source changes\n}));};// Get destination language options (exclude selected source language)\nconst getDestinationOptions=()=>{if(!codeConvForm.technologyType||!codeConvForm.sourceLanguage){return[];}return frameworkOptions[codeConvForm.technologyType].filter(option=>option!==codeConvForm.sourceLanguage);};// Handle Code Conversion form submission\nconst handleCodeConvSubmit=e=>{e.preventDefault();setLoader(true);// Simulate API call - Replace this with your actual API call\nsetTimeout(()=>{setLoader(false);// Mock response - Replace with actual API response\nconst mockResult=\"// Code Conversion Result\\n\\n\"+\"// Technology Type: \".concat(codeConvForm.technologyType,\"\\n\")+\"// Source Language: \".concat(codeConvForm.sourceLanguage,\"\\n\")+\"// Destination Language: \".concat(codeConvForm.destinationLanguage,\"\\n\")+\"// Repository: \".concat(codeConvForm.repositoryUrl,\"\\n\\n\")+\"// Additional Instructions:\\n// \".concat(codeConvForm.additionalInstructions,\"\\n\\n\")+\"// Converted Code:\\n// Original \".concat(codeConvForm.sourceLanguage,\" code has been converted to \").concat(codeConvForm.destinationLanguage,\"\\n\\n\")+\"function convertedCode() {\\n  // Your converted code will appear here\\n  console.log('Code converted from \".concat(codeConvForm.sourceLanguage,\" to \").concat(codeConvForm.destinationLanguage,\"!');\\n}\\n\\nexport default convertedCode;\");setCodeConvResult(mockResult);setCodeConvModalShow(true);setNotification({show:true,body:\"Code converted successfully!\",type:'success'});},2000);};const download=()=>{setLoader(true);axios.post(\"http://10.31.3.17:5000/download-test-cases\",[],{responseType:'blob'}).then(res=>{setLoader(false);if(res.status===200){const url=window.URL.createObjectURL(new Blob([res.data],{type:\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}));const link=document.createElement('a');link.href=url;link.setAttribute('download','test_cases.xlsx');// Name of the file to be downloaded\ndocument.body.appendChild(link);link.click();link.remove();setNotification({show:true,body:\"Downloaded Successfully\",type:'success'});}else{setNotification({show:true,body:\"Something went wrong !!\",type:'danger'});}});};const[responseShow,setResponseShow]=useState(false);const handleResClose=()=>setResponseShow(false);const handleCodeGenClose=()=>setCodeGenModalShow(false);const handleCodeConvClose=()=>setCodeConvModalShow(false);// Code Generation Content Component\nconst CodeGenerationContent=()=>/*#__PURE__*/_jsx(\"div\",{className:\"code-generation-content\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"code-tab-form\",onSubmit:handleCodeGenSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formRow\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Select Technology Type:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"formfield_select input_dark\",value:codeGenForm.technologyType,onChange:e=>handleTechnologyChange(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Technology Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Frontend\",children:\"Frontend\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Backend\",children:\"Backend\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Database\",children:\"Database\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Select Framework/Code Language:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"formfield_select input_dark\",value:codeGenForm.framework,onChange:e=>setCodeGenForm(_objectSpread(_objectSpread({},codeGenForm),{},{framework:e.target.value})),required:true,disabled:!codeGenForm.technologyType,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Framework/Language\"}),codeGenForm.technologyType&&frameworkOptions[codeGenForm.technologyType].map((option,index)=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},index))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Repository Url/Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"formfield_select input_dark\",value:codeGenForm.repositoryUrl,onChange:e=>setCodeGenForm(_objectSpread(_objectSpread({},codeGenForm),{},{repositoryUrl:e.target.value})),placeholder:\"Enter repository URL or name...\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"User Requirement:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"formfield_ta input_dark\",value:codeGenForm.userRequirement,onChange:e=>setCodeGenForm(_objectSpread(_objectSpread({},codeGenForm),{},{userRequirement:e.target.value})),placeholder:\"Enter your requirements...\",required:true,rows:\"8\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary formButton\",children:\"Generate\"})})]})});// Code Conversion Content Component\nconst CodeConversionContent=()=>/*#__PURE__*/_jsx(\"div\",{className:\"code-conversion-content\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"code-tab-form\",onSubmit:handleCodeConvSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Select Technology Type:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"formfield_select input_dark\",value:codeConvForm.technologyType,onChange:e=>handleConvTechnologyChange(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Technology Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Frontend\",children:\"Frontend\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Backend\",children:\"Backend\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Database\",children:\"Database\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formRow\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Source Language:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"formfield_select input_dark\",value:codeConvForm.sourceLanguage,onChange:e=>handleSourceLanguageChange(e.target.value),required:true,disabled:!codeConvForm.technologyType,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Source Language\"}),codeConvForm.technologyType&&frameworkOptions[codeConvForm.technologyType].map((option,index)=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},index))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Destination Language:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"formfield_select input_dark\",value:codeConvForm.destinationLanguage,onChange:e=>setCodeConvForm(_objectSpread(_objectSpread({},codeConvForm),{},{destinationLanguage:e.target.value})),required:true,disabled:!codeConvForm.sourceLanguage,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Destination Language\"}),getDestinationOptions().map((option,index)=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},index))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Repository Url/Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"formfield_select input_dark\",value:codeConvForm.repositoryUrl,onChange:e=>setCodeConvForm(_objectSpread(_objectSpread({},codeConvForm),{},{repositoryUrl:e.target.value})),placeholder:\"Enter repository URL or name...\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Add Your Additional Instructions:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"formfield_select input_dark\",value:codeConvForm.additionalInstructions,onChange:e=>setCodeConvForm(_objectSpread(_objectSpread({},codeConvForm),{},{additionalInstructions:e.target.value})),placeholder:\"Enter your additional instructions...\",rows:\"3\",style:{height:'auto',minHeight:'80px'}})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary formButton\",children:\"Convert\"})})]})});console.log(loader,\"loader\");return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Toast,{className:\"d-inline-block m-1 toast\",bg:notification.type,onClose:()=>setNotification(prevState=>_objectSpread(_objectSpread({},prevState),{},{show:false})),show:notification.show,position:\"top-end\",autohide:true,children:[/*#__PURE__*/_jsx(Toast.Header,{children:/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"Success\"})}),/*#__PURE__*/_jsx(Toast.Body,{className:\"text-white\",children:notification.body})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-tabs\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='test-case-generation'?'active':''),onClick:()=>setActiveTab('test-case-generation'),children:\"Test Case Generation\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='code-generation'?'active':''),onClick:()=>setActiveTab('code-generation'),children:\"Code Generation\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='code-conversion'?'active':''),onClick:()=>setActiveTab('code-conversion'),children:\"Code Conversion\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content-wrapper\",children:[activeTab==='test-case-generation'&&/*#__PURE__*/_jsx(\"div\",{className:\"test-case-gen-content\",children:/*#__PURE__*/_jsx(FileUpload,{handleSubmit:handleSubmit,setNotification:setNotification})}),activeTab==='code-generation'&&/*#__PURE__*/_jsx(CodeGenerationContent,{}),activeTab==='code-conversion'&&/*#__PURE__*/_jsx(CodeConversionContent,{})]}),loader&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",width:\"100vw\",height:\"100vh\",zIndex:30,top:0,'backgroundColor':\"#00000082\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",style:{position:'relative',top:'50%'},children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})})}),/*#__PURE__*/_jsxs(Modal,{show:responseShow,size:\"xl\",onHide:handleResClose,dialogClassName:\"formbody_dark modal_body\",backdrop:\"static\",keyboard:false,children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Modal.Title,{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs Restab\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"label\",{className:\"nav-link\"+(resType==='review'?\" active\":\"\"),\"aria-current\":\"page\",onClick:e=>setResType('review'),children:\"Review\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"label\",{className:\"nav-link\"+(resType==='suggestions'?\" active\":\"\"),onClick:e=>setResType('suggestions'),children:\"Suggestions\"})})]})})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[resType==='review'&&/*#__PURE__*/_jsxs(\"table\",{className:\"resTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'10%'},children:\"Test Step\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Step Actions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Steps Expected\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:response.map((ele,key)=>{return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:ele.Title}),/*#__PURE__*/_jsx(\"td\",{children:ele['Test Step']}),/*#__PURE__*/_jsx(\"td\",{children:ele['Step Action']}),/*#__PURE__*/_jsx(\"td\",{children:ele['Step Expected']})]},key);})})]}),resType==='suggestions'&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"pre\",{className:\"textWrap\",children:suggestions.map((e,index)=>/*#__PURE__*/_jsx(React.Fragment,{children:e.suggestion+\"\\n\"},index))})})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:e=>download(),children:\"Download\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:handleResClose,children:\"Close\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:codeGenModalShow,size:\"xl\",onHide:handleCodeGenClose,dialogClassName:\"formbody_dark modal_body\",backdrop:\"static\",keyboard:false,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Code Generation Result\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"pre\",{className:\"textWrap\",style:{backgroundColor:'#1e1e1e',color:'#d4d4d4',padding:'20px',borderRadius:'5px',fontSize:'14px',fontFamily:'Consolas, Monaco, monospace'},children:codeGenResult})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:handleCodeGenClose,children:\"Close\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:codeConvModalShow,size:\"xl\",onHide:handleCodeConvClose,dialogClassName:\"formbody_dark modal_body\",backdrop:\"static\",keyboard:false,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Code Conversion Result\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"pre\",{className:\"textWrap\",style:{backgroundColor:'#1e1e1e',color:'#d4d4d4',padding:'20px',borderRadius:'5px',fontSize:'14px',fontFamily:'Consolas, Monaco, monospace'},children:codeConvResult})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:handleCodeConvClose,children:\"Close\"})})]}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","axios","Header","FileUpload","Spinner","Toast","Modal","Footer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","loader","setLoader","resType","setResType","activeTab","setActiveTab","notification","setNotification","show","body","response","setResponse","suggestions","setSuggestions","codeGenForm","setCodeGenForm","technologyType","framework","repositoryUrl","userRequirement","codeConvForm","setCodeConvForm","sourceLanguage","destinationLanguage","additionalInstructions","codeGenModalShow","setCodeGenModalShow","codeConvModalShow","setCodeConvModalShow","codeGenResult","setCodeGenResult","codeConvResult","setCodeConvResult","frameworkOptions","Frontend","Backend","Database","handleSubmit","data","type","project_name","assigned_to","testCaseType","console","log","file","length","postData","user_story_description","userStory","application_type","existingFile","post","headers","then","res","status","message","test_cases","setResponseShow","handleCodeGenSubmit","e","preventDefault","setTimeout","mockResult","concat","handleTechnologyChange","value","_objectSpread","handleConvTechnologyChange","handleSourceLanguageChange","getDestinationOptions","filter","option","handleCodeConvSubmit","download","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","remove","responseShow","handleResClose","handleCodeGenClose","handleCodeConvClose","CodeGenerationContent","className","children","onSubmit","onChange","target","required","disabled","map","index","placeholder","rows","CodeConversionContent","style","height","minHeight","bg","onClose","prevState","position","autohide","Body","onClick","width","zIndex","top","animation","role","size","onHide","dialogClassName","backdrop","keyboard","Title","ele","key","suggestion","closeButton","backgroundColor","color","padding","borderRadius","fontSize","fontFamily"],"sources":["/workspaces/test-react/src/App.js"],"sourcesContent":["import React, {  useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './Component/header';\nimport FileUpload from './Component/FileUpload';\nimport { Spinner } from 'react-bootstrap';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Footer from './Component/Footer';\n// import Response from './Component/Response';\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n  const [resType, setResType] = useState(\"review\");\n  const [activeTab, setActiveTab] = useState(\"test-case-generation\"); // Default tab is now Test Case Generation\n  const [notification, setNotification] = useState({\n    show: false,\n    body: \"\"\n  });\n  const [response,setResponse] = useState([])\n  const [suggestions,setSuggestions] = useState([])\n  \n  // States for Code Generation and Code Conversion\n  const [codeGenForm, setCodeGenForm] = useState({\n    technologyType: '',\n    framework: '',\n    repositoryUrl: '',\n    userRequirement: ''\n  });\n  \n  const [codeConvForm, setCodeConvForm] = useState({\n    technologyType: '',\n    sourceLanguage: '',\n    destinationLanguage: '',\n    repositoryUrl: '',\n    additionalInstructions: ''\n  });\n\n  // Modal states for Code Generation and Code Conversion results\n  const [codeGenModalShow, setCodeGenModalShow] = useState(false);\n  const [codeConvModalShow, setCodeConvModalShow] = useState(false);\n  const [codeGenResult, setCodeGenResult] = useState('');\n  const [codeConvResult, setCodeConvResult] = useState('');\n\n  // Framework options based on technology type\n  const frameworkOptions = {\n    Frontend: ['React', 'Vue', 'JavaScript', 'Angular', 'HTML', 'CSS'],\n    Backend: ['Python', 'Java', 'ASP.NET', 'Django', 'Node.js', 'Spring Boot', 'PHP', 'Flask'],\n    Database: ['Oracle', 'PostgreSQL', 'MySQL', 'MongoDB', 'Redis', 'SQLite']\n  };\n\n  // const [apiResponse, setApiResponse] = useState([]);\n  const handleSubmit = (data, type, project_name, assigned_to, testCaseType) => {\n    //event.preventDefault();\n    console.log(data)\n    if (data.file.length) {\n      setLoader(true);\n      let postData = {\n        user_story_description: data.userStory,\n        file: data.file,\n        application_type: type,\n        project_name: project_name,\n        assigned_to: assigned_to\n      }\n      if(testCaseType === 'existing'){\n        postData.testCaseType = testCaseType;\n        postData.existingFile = data.existingFile;\n      }\n      axios.post(`http://10.31.3.17:5000/generate-test-cases`, postData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'accept': '*/*'\n        }\n      })\n        .then(res => {\n          console.log(res)\n          setLoader(false);\n          if(res.status === 200){\n            setNotification({\n              show:true,\n              body:res.data.message,\n              type:'success'\n            })\n            setResponse(res.data.test_cases)\n            setSuggestions(res.data.suggestions)\n            setResponseShow(true)\n          }else{\n            setNotification({\n              show:true,\n              body:\"Something went wrong !!\",\n              type:'danger'\n            })\n          }\n          \n        })\n      \n\n    }\n  }\n\n  // Handle Code Generation form submission\n  const handleCodeGenSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n    \n    // Simulate API call - Replace this with your actual API call\n    setTimeout(() => {\n      setLoader(false);\n      // Mock response - Replace with actual API response\n      const mockResult = `// Generated ${codeGenForm.framework} code for ${codeGenForm.technologyType}\\n\\n` +\n        `// Technology: ${codeGenForm.technologyType}\\n` +\n        `// Framework: ${codeGenForm.framework}\\n` +\n        `// Repository: ${codeGenForm.repositoryUrl}\\n\\n` +\n        `// User Requirements:\\n// ${codeGenForm.userRequirement}\\n\\n` +\n        `// Generated Code:\\nfunction generatedCode() {\\n  // Your generated code will appear here\\n  console.log('Code generated successfully!');\\n}\\n\\nmodule.exports = generatedCode;`;\n      \n      setCodeGenResult(mockResult);\n      setCodeGenModalShow(true);\n      \n      setNotification({\n        show: true,\n        body: \"Code generated successfully!\",\n        type: 'success'\n      });\n    }, 2000);\n  };\n\n  // Handle technology type change and reset framework for Code Generation\n  const handleTechnologyChange = (value) => {\n    setCodeGenForm({\n      ...codeGenForm,\n      technologyType: value,\n      framework: '' // Reset framework when technology type changes\n    });\n  };\n\n  // Handle technology type change for Code Conversion\n  const handleConvTechnologyChange = (value) => {\n    setCodeConvForm({\n      ...codeConvForm,\n      technologyType: value,\n      sourceLanguage: '',\n      destinationLanguage: ''\n    });\n  };\n\n  // Handle source language change for Code Conversion\n  const handleSourceLanguageChange = (value) => {\n    setCodeConvForm({\n      ...codeConvForm,\n      sourceLanguage: value,\n      destinationLanguage: '' // Reset destination language when source changes\n    });\n  };\n\n  // Get destination language options (exclude selected source language)\n  const getDestinationOptions = () => {\n    if (!codeConvForm.technologyType || !codeConvForm.sourceLanguage) {\n      return [];\n    }\n    return frameworkOptions[codeConvForm.technologyType].filter(\n      option => option !== codeConvForm.sourceLanguage\n    );\n  };\n\n  // Handle Code Conversion form submission\n  const handleCodeConvSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n    \n    // Simulate API call - Replace this with your actual API call\n    setTimeout(() => {\n      setLoader(false);\n      // Mock response - Replace with actual API response\n      const mockResult = `// Code Conversion Result\\n\\n` +\n        `// Technology Type: ${codeConvForm.technologyType}\\n` +\n        `// Source Language: ${codeConvForm.sourceLanguage}\\n` +\n        `// Destination Language: ${codeConvForm.destinationLanguage}\\n` +\n        `// Repository: ${codeConvForm.repositoryUrl}\\n\\n` +\n        `// Additional Instructions:\\n// ${codeConvForm.additionalInstructions}\\n\\n` +\n        `// Converted Code:\\n// Original ${codeConvForm.sourceLanguage} code has been converted to ${codeConvForm.destinationLanguage}\\n\\n` +\n        `function convertedCode() {\\n  // Your converted code will appear here\\n  console.log('Code converted from ${codeConvForm.sourceLanguage} to ${codeConvForm.destinationLanguage}!');\\n}\\n\\nexport default convertedCode;`;\n      \n      setCodeConvResult(mockResult);\n      setCodeConvModalShow(true);\n      \n      setNotification({\n        show: true,\n        body: \"Code converted successfully!\",\n        type: 'success'\n      });\n    }, 2000);\n  };\n\n  const download = () =>{\n    setLoader(true);\n    axios.post(`http://10.31.3.17:5000/download-test-cases`, [], {\n            responseType: 'blob'\n          \n        }).then(res => {\n                setLoader(false);\n                if(res.status === 200){\n                  const url = window.URL.createObjectURL(new Blob([res.data], {type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}));\n                  const link = document.createElement('a');\n                  link.href = url;\n                  link.setAttribute('download', 'test_cases.xlsx'); // Name of the file to be downloaded\n                  document.body.appendChild(link);\n                  link.click();\n                  link.remove();\n                  setNotification({\n                    show:true,\n                    body:\"Downloaded Successfully\",\n                    type:'success'\n                  })\n                }else{\n                  setNotification({\n                    show:true,\n                    body:\"Something went wrong !!\",\n                    type:'danger'\n                  })\n                }\n                \n              })\n  }\n  const [responseShow, setResponseShow] = useState(false);\n\n  const handleResClose = () => setResponseShow(false);\n  const handleCodeGenClose = () => setCodeGenModalShow(false);\n  const handleCodeConvClose = () => setCodeConvModalShow(false);\n\n  // Code Generation Content Component\n  const CodeGenerationContent = () => (\n    <div className=\"code-generation-content\">\n      <form className=\"code-tab-form\" onSubmit={handleCodeGenSubmit}>\n        {/* Row with two dropdowns */}\n        <div className=\"formRow\">\n          <div>\n            <label className=\"formLabel\">Select Technology Type:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeGenForm.technologyType}\n              onChange={(e) => handleTechnologyChange(e.target.value)}\n              required\n            >\n              <option value=\"\">Select Technology Type</option>\n              <option value=\"Frontend\">Frontend</option>\n              <option value=\"Backend\">Backend</option>\n              <option value=\"Database\">Database</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"formLabel\">Select Framework/Code Language:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeGenForm.framework}\n              onChange={(e) => setCodeGenForm({...codeGenForm, framework: e.target.value})}\n              required\n              disabled={!codeGenForm.technologyType}\n            >\n              <option value=\"\">Select Framework/Language</option>\n              {codeGenForm.technologyType && frameworkOptions[codeGenForm.technologyType].map((option, index) => (\n                <option key={index} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {/* Repository URL field */}\n        <div>\n          <label className=\"formLabel\">Repository Url/Name:</label>\n          <input\n            type=\"text\"\n            className=\"formfield_select input_dark\"\n            value={codeGenForm.repositoryUrl}\n            onChange={(e) => setCodeGenForm({...codeGenForm, repositoryUrl: e.target.value})}\n            placeholder=\"Enter repository URL or name...\"\n          />\n        </div>\n        \n        {/* User Requirement field */}\n        <div>\n          <label className=\"formLabel\">User Requirement:</label>\n          <textarea\n            className=\"formfield_ta input_dark\"\n            value={codeGenForm.userRequirement}\n            onChange={(e) => setCodeGenForm({...codeGenForm, userRequirement: e.target.value})}\n            placeholder=\"Enter your requirements...\"\n            required\n            rows=\"8\"\n          />\n        </div>\n        \n        {/* Generate button */}\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary formButton\">\n            Generate\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n  // Code Conversion Content Component\n  const CodeConversionContent = () => (\n    <div className=\"code-conversion-content\">\n      <form className=\"code-tab-form\" onSubmit={handleCodeConvSubmit}>\n        {/* Technology Type dropdown */}\n        <div>\n          <label className=\"formLabel\">Select Technology Type:</label>\n          <select\n            className=\"formfield_select input_dark\"\n            value={codeConvForm.technologyType}\n            onChange={(e) => handleConvTechnologyChange(e.target.value)}\n            required\n          >\n            <option value=\"\">Select Technology Type</option>\n            <option value=\"Frontend\">Frontend</option>\n            <option value=\"Backend\">Backend</option>\n            <option value=\"Database\">Database</option>\n          </select>\n        </div>\n\n        {/* Row with Source and Destination Language dropdowns */}\n        <div className=\"formRow\">\n          <div>\n            <label className=\"formLabel\">Source Language:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeConvForm.sourceLanguage}\n              onChange={(e) => handleSourceLanguageChange(e.target.value)}\n              required\n              disabled={!codeConvForm.technologyType}\n            >\n              <option value=\"\">Select Source Language</option>\n              {codeConvForm.technologyType && frameworkOptions[codeConvForm.technologyType].map((option, index) => (\n                <option key={index} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label className=\"formLabel\">Destination Language:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeConvForm.destinationLanguage}\n              onChange={(e) => setCodeConvForm({...codeConvForm, destinationLanguage: e.target.value})}\n              required\n              disabled={!codeConvForm.sourceLanguage}\n            >\n              <option value=\"\">Select Destination Language</option>\n              {getDestinationOptions().map((option, index) => (\n                <option key={index} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {/* Repository URL field */}\n        <div>\n          <label className=\"formLabel\">Repository Url/Name:</label>\n          <input\n            type=\"text\"\n            className=\"formfield_select input_dark\"\n            value={codeConvForm.repositoryUrl}\n            onChange={(e) => setCodeConvForm({...codeConvForm, repositoryUrl: e.target.value})}\n            placeholder=\"Enter repository URL or name...\"\n          />\n        </div>\n        \n        {/* Additional Instructions field - MADE SHORTER */}\n        <div>\n          <label className=\"formLabel\">Add Your Additional Instructions:</label>\n          <textarea\n            className=\"formfield_select input_dark\"\n            value={codeConvForm.additionalInstructions}\n            onChange={(e) => setCodeConvForm({...codeConvForm, additionalInstructions: e.target.value})}\n            placeholder=\"Enter your additional instructions...\"\n            rows=\"3\"\n            style={{height: 'auto', minHeight: '80px'}}\n          />\n        </div>\n        \n        {/* Convert button */}\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary formButton\">\n            Convert\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n  console.log(loader,\"loader\")\n  return (\n    <>\n      <Header />\n      <Toast className=\"d-inline-block m-1 toast\" bg={notification.type} onClose={() => setNotification(prevState =>( { ...prevState,show:false }))} show={notification.show} position=\"top-end\" autohide>\n        <Toast.Header>\n          <strong className=\"me-auto\">Success</strong>\n        </Toast.Header>\n        <Toast.Body className='text-white'>{notification.body}</Toast.Body>\n      </Toast>\n\n      {/* Main Tab Navigation */}\n      <div className=\"main-tabs\">\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <button \n              className={`nav-link ${activeTab === 'test-case-generation' ? 'active' : ''}`}\n              onClick={() => setActiveTab('test-case-generation')}\n            >\n              Test Case Generation\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button \n              className={`nav-link ${activeTab === 'code-generation' ? 'active' : ''}`}\n              onClick={() => setActiveTab('code-generation')}\n            >\n              Code Generation\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button \n              className={`nav-link ${activeTab === 'code-conversion' ? 'active' : ''}`}\n              onClick={() => setActiveTab('code-conversion')}\n            >\n              Code Conversion\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"tab-content-wrapper\">\n        {activeTab === 'test-case-generation' && (\n          <div className=\"test-case-gen-content\">\n            <FileUpload handleSubmit={handleSubmit} setNotification={setNotification} />\n          </div>\n        )}\n        {activeTab === 'code-generation' && <CodeGenerationContent />}\n        {activeTab === 'code-conversion' && <CodeConversionContent />}\n      </div>\n\n      {loader && (<div style={{position: \"absolute\",width: \"100vw\",height: \"100vh\",zIndex: 30,top: 0,'backgroundColor': \"#00000082\"}}>\n        <div className=\"text-center mt-4\" style={{position: 'relative',top:'50%'}}>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n\n      </div>)}\n      {\n        // (uploadedFiles.length)?<Response apiResponse={apiResponse}/> : <FileUpload uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles}/>\n      }\n      \n      {/* <!--Test Case Response Modal --> */}\n      <Modal show={responseShow} size='xl' onHide={handleResClose} dialogClassName=\"formbody_dark modal_body\" backdrop=\"static\"\n        keyboard={false}>\n        <Modal.Header>\n          <Modal.Title>\n          <ul className=\"nav nav-tabs Restab\">\n                <li className=\"nav-item\">\n                    <label className={\"nav-link\" + (resType === 'review'? \" active\":\"\")} aria-current=\"page\" onClick={e=>setResType('review')}>Review</label>\n                </li>\n                <li className=\"nav-item\">\n                    <label className={\"nav-link\" + (resType === 'suggestions'? \" active\":\"\")} onClick={e=>setResType('suggestions')}>Suggestions</label>\n                </li>\n            </ul>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            {(resType === 'review') && <table className='resTable'>\n                <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th style={{width: '10%'}}>Test Step</th>\n                        <th>Step Actions</th>\n                        <th>Steps Expected</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {response.map((ele,key)=>{\n                      return(<tr key={key}>\n                        <td>{ele.Title}</td>\n                        <td>{ele['Test Step']}</td>\n                        <td>{ele['Step Action']}</td>\n                        <td>{ele['Step Expected']}</td>\n                      </tr>)\n                    })}\n                </tbody>    \n            </table>}\n            {(resType === 'suggestions') && <div><pre className='textWrap'>{suggestions.map((e, index) => <React.Fragment key={index}>{e.suggestion + \"\\n\"}</React.Fragment>)}</pre></div>}\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-primary\" onClick={e=>download()}>\n            Download\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleResClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Code Generation Result Modal */}\n      <Modal show={codeGenModalShow} size='xl' onHide={handleCodeGenClose} dialogClassName=\"formbody_dark modal_body\" backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Code Generation Result</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre className='textWrap' style={{backgroundColor: '#1e1e1e', color: '#d4d4d4', padding: '20px', borderRadius: '5px', fontSize: '14px', fontFamily: 'Consolas, Monaco, monospace'}}>{codeGenResult}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-secondary\" onClick={handleCodeGenClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Code Conversion Result Modal */}\n      <Modal show={codeConvModalShow} size='xl' onHide={handleCodeConvClose} dialogClassName=\"formbody_dark modal_body\" backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Code Conversion Result</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre className='textWrap' style={{backgroundColor: '#1e1e1e', color: '#d4d4d4', padding: '20px', borderRadius: '5px', fontSize: '14px', fontFamily: 'Consolas, Monaco, monospace'}}>{codeConvResult}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-secondary\" onClick={handleCodeConvClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n\n      <Footer></Footer>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}