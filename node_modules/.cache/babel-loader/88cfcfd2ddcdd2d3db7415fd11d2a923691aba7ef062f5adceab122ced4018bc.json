{"ast":null,"code":"var _jsxFileName = \"/workspaces/test-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './Component/header';\nimport FileUpload from './Component/FileUpload';\nimport { Spinner } from 'react-bootstrap';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Footer from './Component/Footer';\n// import Response from './Component/Response';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loader, setLoader] = useState(false);\n  const [resType, setResType] = useState(\"review\");\n  const [activeTab, setActiveTab] = useState(\"test-case-generation\"); // Default tab is now Test Case Generation\n  const [notification, setNotification] = useState({\n    show: false,\n    body: \"\"\n  });\n  const [response, setResponse] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n\n  // States for Code Generation and Code Conversion\n  const [codeGenForm, setCodeGenForm] = useState({\n    technologyType: '',\n    framework: '',\n    repositoryUrl: '',\n    userRequirement: ''\n  });\n  const [codeConvForm, setCodeConvForm] = useState({\n    technologyType: '',\n    sourceLanguage: '',\n    destinationLanguage: '',\n    repositoryUrl: '',\n    additionalInstructions: ''\n  });\n\n  // Modal states for Code Generation and Code Conversion results\n  const [codeGenModalShow, setCodeGenModalShow] = useState(false);\n  const [codeConvModalShow, setCodeConvModalShow] = useState(false);\n  const [codeGenResult, setCodeGenResult] = useState('');\n  const [codeConvResult, setCodeConvResult] = useState('');\n\n  // Framework options based on technology type\n  const frameworkOptions = {\n    Frontend: ['React', 'Vue', 'JavaScript', 'Angular', 'HTML', 'CSS'],\n    Backend: ['Python', 'Java', 'ASP.NET', 'Django', 'Node.js', 'Spring Boot', 'PHP', 'Flask'],\n    Database: ['Oracle', 'PostgreSQL', 'MySQL', 'MongoDB', 'Redis', 'SQLite']\n  };\n\n  // const [apiResponse, setApiResponse] = useState([]);\n  const handleSubmit = (data, type, project_name, assigned_to, testCaseType) => {\n    //event.preventDefault();\n    console.log(data);\n    if (data.file.length) {\n      setLoader(true);\n      let postData = {\n        user_story_description: data.userStory,\n        file: data.file,\n        application_type: type,\n        project_name: project_name,\n        assigned_to: assigned_to\n      };\n      if (testCaseType === 'existing') {\n        postData.testCaseType = testCaseType;\n        postData.existingFile = data.existingFile;\n      }\n      axios.post(`http://10.31.3.17:5000/generate-test-cases`, postData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'accept': '*/*'\n        }\n      }).then(res => {\n        console.log(res);\n        setLoader(false);\n        if (res.status === 200) {\n          setNotification({\n            show: true,\n            body: res.data.message,\n            type: 'success'\n          });\n          setResponse(res.data.test_cases);\n          setSuggestions(res.data.suggestions);\n          setResponseShow(true);\n        } else {\n          setNotification({\n            show: true,\n            body: \"Something went wrong !!\",\n            type: 'danger'\n          });\n        }\n      });\n    }\n  };\n\n  // Handle Code Generation form submission\n  const handleCodeGenSubmit = async e => {\n    e.preventDefault();\n    setLoader(true);\n\n    // Simulate API call - Replace this with your actual API call\n    setTimeout(async () => {\n      setLoader(false);\n\n      // ------------------------------------------------------------------------------------------\n\n      const user_req_with_framework = `This is framework ${codeGenForm.framework} and this is the ${codeGenForm.technologyType} which you need to consider for the below user requirement.\n                                        ${codeGenForm.userRequirement}`;\n      const postData = {\n        repo_url: codeGenForm.repositoryUrl,\n        requirement_text: user_req_with_framework\n      };\n      console.log(\"calling code generation API\");\n      response = await axios.post(`http://127.0.0.1:8000/codegeneration`, postData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*'\n        }\n      });\n      console.log(response);\n      // axios.post(`http://127.0.0.1:8000/codegeneration`, postData, {\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'accept': '*/*'\n      //   }\n      // })\n      //   .then((res) => {\n      //     setLoader(false);\n      //     // if (res.status === 200) {\n      //     if (res === 200) {\n      //       console.log(res)\n      //       setCodeGenResult(res?.new_files?.content || \"No result returned.\");\n      //       setCodeGenModalShow(true);\n\n      //       setNotification({\n      //         show: true,\n      //         body: \"Code generated successfully!\",\n      //         type: 'success'\n      //       });\n      //     } else {\n      //       setNotification({\n      //         show: true,\n      //         body: \"Something went wrong !!\",\n      //         type: 'danger'\n      //       });\n      //     }\n      //   })\n      //   .catch(err => {\n      //     console.error(err);\n      //     setLoader(false);\n      //     setNotification({\n      //       show: true,\n      //       body: \"API call failed!\",\n      //       type: 'danger'\n      //     });\n      //   });\n      // ------------------------------------------------------------------------------------------\n      // Mock response - Replace with actual API response\n      const mockResult = `// Generated ${codeGenForm.framework} code for ${codeGenForm.technologyType}\\n\\n` + `// Technology: ${codeGenForm.technologyType}\\n` + `// Framework: ${codeGenForm.framework}\\n` + `// Repository: ${codeGenForm.repositoryUrl}\\n\\n` + `// User Requirements:\\n// ${codeGenForm.userRequirement}\\n\\n` + `// Generated Code:\\nfunction generatedCode() {\\n  // Your generated code will appear here\\n  console.log('Code generated successfully!');\\n}\\n\\nmodule.exports = generatedCode;`;\n      setCodeGenResult(mockResult);\n      setCodeGenModalShow(true);\n      setNotification({\n        show: true,\n        body: \"Code generated successfully!\",\n        type: 'success'\n      });\n    }, 2000);\n  };\n\n  // Handle technology type change and reset framework for Code Generation\n  const handleTechnologyChange = value => {\n    setCodeGenForm({\n      ...codeGenForm,\n      technologyType: value,\n      framework: '' // Reset framework when technology type changes\n    });\n  };\n\n  // Handle technology type change for Code Conversion\n  const handleConvTechnologyChange = value => {\n    setCodeConvForm({\n      ...codeConvForm,\n      technologyType: value,\n      sourceLanguage: '',\n      destinationLanguage: ''\n    });\n  };\n\n  // Handle source language change for Code Conversion\n  const handleSourceLanguageChange = value => {\n    setCodeConvForm({\n      ...codeConvForm,\n      sourceLanguage: value,\n      destinationLanguage: '' // Reset destination language when source changes\n    });\n  };\n\n  // Get destination language options (exclude selected source language)\n  const getDestinationOptions = () => {\n    if (!codeConvForm.technologyType || !codeConvForm.sourceLanguage) {\n      return [];\n    }\n    return frameworkOptions[codeConvForm.technologyType].filter(option => option !== codeConvForm.sourceLanguage);\n  };\n\n  // Handle Code Conversion form submission\n  const handleCodeConvSubmit = e => {\n    e.preventDefault();\n    setLoader(true);\n\n    // Simulate API call - Replace this with your actual API call\n    setTimeout(() => {\n      setLoader(false);\n      // Mock response - Replace with actual API response\n      const mockResult = `// Code Conversion Result\\n\\n` + `// Technology Type: ${codeConvForm.technologyType}\\n` + `// Source Language: ${codeConvForm.sourceLanguage}\\n` + `// Destination Language: ${codeConvForm.destinationLanguage}\\n` + `// Repository: ${codeConvForm.repositoryUrl}\\n\\n` + `// Additional Instructions:\\n// ${codeConvForm.additionalInstructions}\\n\\n` + `// Converted Code:\\n// Original ${codeConvForm.sourceLanguage} code has been converted to ${codeConvForm.destinationLanguage}\\n\\n` + `function convertedCode() {\\n  // Your converted code will appear here\\n  console.log('Code converted from ${codeConvForm.sourceLanguage} to ${codeConvForm.destinationLanguage}!');\\n}\\n\\nexport default convertedCode;`;\n      setCodeConvResult(mockResult);\n      setCodeConvModalShow(true);\n      setNotification({\n        show: true,\n        body: \"Code converted successfully!\",\n        type: 'success'\n      });\n    }, 2000);\n  };\n  const download = () => {\n    setLoader(true);\n    axios.post(`http://10.31.3.17:5000/download-test-cases`, [], {\n      responseType: 'blob'\n    }).then(res => {\n      setLoader(false);\n      if (res.status === 200) {\n        const url = window.URL.createObjectURL(new Blob([res.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        }));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'test_cases.xlsx'); // Name of the file to be downloaded\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setNotification({\n          show: true,\n          body: \"Downloaded Successfully\",\n          type: 'success'\n        });\n      } else {\n        setNotification({\n          show: true,\n          body: \"Something went wrong !!\",\n          type: 'danger'\n        });\n      }\n    });\n  };\n  const [responseShow, setResponseShow] = useState(false);\n  const handleResClose = () => setResponseShow(false);\n  const handleCodeGenClose = () => setCodeGenModalShow(false);\n  const handleCodeConvClose = () => setCodeConvModalShow(false);\n\n  // Code Generation Content Component\n  const CodeGenerationContent = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-generation-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"code-tab-form\",\n      onSubmit: handleCodeGenSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Select Technology Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"formfield_select input_dark\",\n            value: codeGenForm.technologyType,\n            onChange: e => handleTechnologyChange(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Technology Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Frontend\",\n              children: \"Frontend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Backend\",\n              children: \"Backend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Database\",\n              children: \"Database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Select Framework/Code Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"formfield_select input_dark\",\n            value: codeGenForm.framework,\n            onChange: e => setCodeGenForm({\n              ...codeGenForm,\n              framework: e.target.value\n            }),\n            required: true,\n            disabled: !codeGenForm.technologyType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Framework/Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), codeGenForm.technologyType && frameworkOptions[codeGenForm.technologyType].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Repository Url/Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"formfield_select input_dark\",\n          value: codeGenForm.repositoryUrl,\n          onChange: e => setCodeGenForm({\n            ...codeGenForm,\n            repositoryUrl: e.target.value\n          }),\n          placeholder: \"Enter repository URL or name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"User Requirement:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"formfield_ta input_dark\",\n          value: codeGenForm.userRequirement,\n          onChange: e => setCodeGenForm({\n            ...codeGenForm,\n            userRequirement: e.target.value\n          }),\n          placeholder: \"Enter your requirements...\",\n          required: true,\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary formButton\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n\n  // Code Conversion Content Component\n  const CodeConversionContent = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-conversion-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"code-tab-form\",\n      onSubmit: handleCodeConvSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Select Technology Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"formfield_select input_dark\",\n          value: codeConvForm.technologyType,\n          onChange: e => handleConvTechnologyChange(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Technology Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Frontend\",\n            children: \"Frontend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Backend\",\n            children: \"Backend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Database\",\n            children: \"Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Source Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"formfield_select input_dark\",\n            value: codeConvForm.sourceLanguage,\n            onChange: e => handleSourceLanguageChange(e.target.value),\n            required: true,\n            disabled: !codeConvForm.technologyType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Source Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), codeConvForm.technologyType && frameworkOptions[codeConvForm.technologyType].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Destination Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"formfield_select input_dark\",\n            value: codeConvForm.destinationLanguage,\n            onChange: e => setCodeConvForm({\n              ...codeConvForm,\n              destinationLanguage: e.target.value\n            }),\n            required: true,\n            disabled: !codeConvForm.sourceLanguage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Destination Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), getDestinationOptions().map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Repository Url/Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"formfield_select input_dark\",\n          value: codeConvForm.repositoryUrl,\n          onChange: e => setCodeConvForm({\n            ...codeConvForm,\n            repositoryUrl: e.target.value\n          }),\n          placeholder: \"Enter repository URL or name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Add Your Additional Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"formfield_select input_dark\",\n          value: codeConvForm.additionalInstructions,\n          onChange: e => setCodeConvForm({\n            ...codeConvForm,\n            additionalInstructions: e.target.value\n          }),\n          placeholder: \"Enter your additional instructions...\",\n          rows: \"3\",\n          style: {\n            height: 'auto',\n            minHeight: '80px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary formButton\",\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n  console.log(loader, \"loader\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      className: \"d-inline-block m-1 toast\",\n      bg: notification.type,\n      onClose: () => setNotification(prevState => ({\n        ...prevState,\n        show: false\n      })),\n      show: notification.show,\n      position: \"top-end\",\n      autohide: true,\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"me-auto\",\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        className: \"text-white\",\n        children: notification.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-tabs\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav nav-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-link ${activeTab === 'test-case-generation' ? 'active' : ''}`,\n            onClick: () => setActiveTab('test-case-generation'),\n            children: \"Test Case Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-link ${activeTab === 'code-generation' ? 'active' : ''}`,\n            onClick: () => setActiveTab('code-generation'),\n            children: \"Code Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-link ${activeTab === 'code-conversion' ? 'active' : ''}`,\n            onClick: () => setActiveTab('code-conversion'),\n            children: \"Code Conversion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content-wrapper\",\n      children: [activeTab === 'test-case-generation' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-case-gen-content\",\n        children: /*#__PURE__*/_jsxDEV(FileUpload, {\n          handleSubmit: handleSubmit,\n          setNotification: setNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), activeTab === 'code-generation' && /*#__PURE__*/_jsxDEV(CodeGenerationContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 45\n      }, this), activeTab === 'code-conversion' && /*#__PURE__*/_jsxDEV(CodeConversionContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), loader && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100vw\",\n        height: \"100vh\",\n        zIndex: 30,\n        top: 0,\n        'backgroundColor': \"#00000082\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-4\",\n        style: {\n          position: 'relative',\n          top: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: responseShow,\n      size: \"xl\",\n      onHide: handleResClose,\n      dialogClassName: \"formbody_dark modal_body\",\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav nav-tabs Restab\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"nav-link\" + (resType === 'review' ? \" active\" : \"\"),\n                \"aria-current\": \"page\",\n                onClick: e => setResType('review'),\n                children: \"Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"nav-link\" + (resType === 'suggestions' ? \" active\" : \"\"),\n                onClick: e => setResType('suggestions'),\n                children: \"Suggestions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [resType === 'review' && /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"resTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '10%'\n                },\n                children: \"Test Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Step Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Steps Expected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: response.map((ele, key) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ele.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ele['Test Step']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ele['Step Action']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ele['Step Expected']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 19\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 38\n        }, this), resType === 'suggestions' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"textWrap\",\n            children: suggestions.map((e, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: e.suggestion + \"\\n\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 105\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: e => download(),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleResClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: codeGenModalShow,\n      size: \"xl\",\n      onHide: handleCodeGenClose,\n      dialogClassName: \"formbody_dark modal_body\",\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Code Generation Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"textWrap\",\n          style: {\n            backgroundColor: '#1e1e1e',\n            color: '#d4d4d4',\n            padding: '20px',\n            borderRadius: '5px',\n            fontSize: '14px',\n            fontFamily: 'Consolas, Monaco, monospace'\n          },\n          children: codeGenResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleCodeGenClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: codeConvModalShow,\n      size: \"xl\",\n      onHide: handleCodeConvClose,\n      dialogClassName: \"formbody_dark modal_body\",\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Code Conversion Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"textWrap\",\n          style: {\n            backgroundColor: '#1e1e1e',\n            color: '#d4d4d4',\n            padding: '20px',\n            borderRadius: '5px',\n            fontSize: '14px',\n            fontFamily: 'Consolas, Monaco, monospace'\n          },\n          children: codeConvResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleCodeConvClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Y8vDWGFY0TE0vza/uITkIZSR+iA=\");\n_c = App;\nexport default App;\n\n// import React from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello, React!</h1>\n//       <p>This is a basic React app.</p>\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Header","FileUpload","Spinner","Toast","Modal","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","loader","setLoader","resType","setResType","activeTab","setActiveTab","notification","setNotification","show","body","response","setResponse","suggestions","setSuggestions","codeGenForm","setCodeGenForm","technologyType","framework","repositoryUrl","userRequirement","codeConvForm","setCodeConvForm","sourceLanguage","destinationLanguage","additionalInstructions","codeGenModalShow","setCodeGenModalShow","codeConvModalShow","setCodeConvModalShow","codeGenResult","setCodeGenResult","codeConvResult","setCodeConvResult","frameworkOptions","Frontend","Backend","Database","handleSubmit","data","type","project_name","assigned_to","testCaseType","console","log","file","length","postData","user_story_description","userStory","application_type","existingFile","post","headers","then","res","status","message","test_cases","setResponseShow","handleCodeGenSubmit","e","preventDefault","setTimeout","user_req_with_framework","repo_url","requirement_text","mockResult","handleTechnologyChange","value","handleConvTechnologyChange","handleSourceLanguageChange","getDestinationOptions","filter","option","handleCodeConvSubmit","download","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","remove","responseShow","handleResClose","handleCodeGenClose","handleCodeConvClose","CodeGenerationContent","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","required","disabled","map","index","placeholder","rows","CodeConversionContent","style","height","minHeight","bg","onClose","prevState","position","autohide","Body","onClick","width","zIndex","top","animation","role","size","onHide","dialogClassName","backdrop","keyboard","Title","ele","key","suggestion","closeButton","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","_c","$RefreshReg$"],"sources":["/workspaces/test-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './Component/header';\nimport FileUpload from './Component/FileUpload';\nimport { Spinner } from 'react-bootstrap';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Footer from './Component/Footer';\n// import Response from './Component/Response';\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n  const [resType, setResType] = useState(\"review\");\n  const [activeTab, setActiveTab] = useState(\"test-case-generation\"); // Default tab is now Test Case Generation\n  const [notification, setNotification] = useState({\n    show: false,\n    body: \"\"\n  });\n  const [response, setResponse] = useState([])\n  const [suggestions, setSuggestions] = useState([])\n\n  // States for Code Generation and Code Conversion\n  const [codeGenForm, setCodeGenForm] = useState({\n    technologyType: '',\n    framework: '',\n    repositoryUrl: '',\n    userRequirement: ''\n  });\n\n  const [codeConvForm, setCodeConvForm] = useState({\n    technologyType: '',\n    sourceLanguage: '',\n    destinationLanguage: '',\n    repositoryUrl: '',\n    additionalInstructions: ''\n  });\n\n  // Modal states for Code Generation and Code Conversion results\n  const [codeGenModalShow, setCodeGenModalShow] = useState(false);\n  const [codeConvModalShow, setCodeConvModalShow] = useState(false);\n  const [codeGenResult, setCodeGenResult] = useState('');\n  const [codeConvResult, setCodeConvResult] = useState('');\n\n  // Framework options based on technology type\n  const frameworkOptions = {\n    Frontend: ['React', 'Vue', 'JavaScript', 'Angular', 'HTML', 'CSS'],\n    Backend: ['Python', 'Java', 'ASP.NET', 'Django', 'Node.js', 'Spring Boot', 'PHP', 'Flask'],\n    Database: ['Oracle', 'PostgreSQL', 'MySQL', 'MongoDB', 'Redis', 'SQLite']\n  };\n\n  // const [apiResponse, setApiResponse] = useState([]);\n  const handleSubmit = (data, type, project_name, assigned_to, testCaseType) => {\n    //event.preventDefault();\n    console.log(data)\n    if (data.file.length) {\n      setLoader(true);\n      let postData = {\n        user_story_description: data.userStory,\n        file: data.file,\n        application_type: type,\n        project_name: project_name,\n        assigned_to: assigned_to\n      }\n      if (testCaseType === 'existing') {\n        postData.testCaseType = testCaseType;\n        postData.existingFile = data.existingFile;\n      }\n      axios.post(`http://10.31.3.17:5000/generate-test-cases`, postData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'accept': '*/*'\n        }\n      })\n        .then(res => {\n          console.log(res)\n          setLoader(false);\n          if (res.status === 200) {\n            setNotification({\n              show: true,\n              body: res.data.message,\n              type: 'success'\n            })\n            setResponse(res.data.test_cases)\n            setSuggestions(res.data.suggestions)\n            setResponseShow(true)\n          } else {\n            setNotification({\n              show: true,\n              body: \"Something went wrong !!\",\n              type: 'danger'\n            })\n          }\n\n        })\n\n\n    }\n  }\n\n  // Handle Code Generation form submission\n  const handleCodeGenSubmit = async (e) => {\n    e.preventDefault();\n    setLoader(true);\n\n    // Simulate API call - Replace this with your actual API call\n    setTimeout(async () => {\n      setLoader(false);\n\n      // ------------------------------------------------------------------------------------------\n\n      const user_req_with_framework = `This is framework ${codeGenForm.framework} and this is the ${codeGenForm.technologyType} which you need to consider for the below user requirement.\n                                        ${codeGenForm.userRequirement}`\n      const postData = {\n        repo_url: codeGenForm.repositoryUrl,\n        requirement_text: user_req_with_framework\n      };\n      console.log(\"calling code generation API\")\n      response = await  axios.post(`http://127.0.0.1:8000/codegeneration`, postData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*'\n        }\n      })\n\n      console.log(response)\n      // axios.post(`http://127.0.0.1:8000/codegeneration`, postData, {\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'accept': '*/*'\n      //   }\n      // })\n      //   .then((res) => {\n      //     setLoader(false);\n      //     // if (res.status === 200) {\n      //     if (res === 200) {\n      //       console.log(res)\n      //       setCodeGenResult(res?.new_files?.content || \"No result returned.\");\n      //       setCodeGenModalShow(true);\n\n      //       setNotification({\n      //         show: true,\n      //         body: \"Code generated successfully!\",\n      //         type: 'success'\n      //       });\n      //     } else {\n      //       setNotification({\n      //         show: true,\n      //         body: \"Something went wrong !!\",\n      //         type: 'danger'\n      //       });\n      //     }\n      //   })\n      //   .catch(err => {\n      //     console.error(err);\n      //     setLoader(false);\n      //     setNotification({\n      //       show: true,\n      //       body: \"API call failed!\",\n      //       type: 'danger'\n      //     });\n      //   });\n      // ------------------------------------------------------------------------------------------\n      // Mock response - Replace with actual API response\n      const mockResult = `// Generated ${codeGenForm.framework} code for ${codeGenForm.technologyType}\\n\\n` +\n        `// Technology: ${codeGenForm.technologyType}\\n` +\n        `// Framework: ${codeGenForm.framework}\\n` +\n        `// Repository: ${codeGenForm.repositoryUrl}\\n\\n` +\n        `// User Requirements:\\n// ${codeGenForm.userRequirement}\\n\\n` +\n        `// Generated Code:\\nfunction generatedCode() {\\n  // Your generated code will appear here\\n  console.log('Code generated successfully!');\\n}\\n\\nmodule.exports = generatedCode;`;\n\n      setCodeGenResult(mockResult);\n      setCodeGenModalShow(true);\n\n      setNotification({\n        show: true,\n        body: \"Code generated successfully!\",\n        type: 'success'\n      });\n    }, 2000);\n  };\n\n  // Handle technology type change and reset framework for Code Generation\n  const handleTechnologyChange = (value) => {\n    setCodeGenForm({\n      ...codeGenForm,\n      technologyType: value,\n      framework: '' // Reset framework when technology type changes\n    });\n  };\n\n  // Handle technology type change for Code Conversion\n  const handleConvTechnologyChange = (value) => {\n    setCodeConvForm({\n      ...codeConvForm,\n      technologyType: value,\n      sourceLanguage: '',\n      destinationLanguage: ''\n    });\n  };\n\n  // Handle source language change for Code Conversion\n  const handleSourceLanguageChange = (value) => {\n    setCodeConvForm({\n      ...codeConvForm,\n      sourceLanguage: value,\n      destinationLanguage: '' // Reset destination language when source changes\n    });\n  };\n\n  // Get destination language options (exclude selected source language)\n  const getDestinationOptions = () => {\n    if (!codeConvForm.technologyType || !codeConvForm.sourceLanguage) {\n      return [];\n    }\n    return frameworkOptions[codeConvForm.technologyType].filter(\n      option => option !== codeConvForm.sourceLanguage\n    );\n  };\n\n  // Handle Code Conversion form submission\n  const handleCodeConvSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n\n    // Simulate API call - Replace this with your actual API call\n    setTimeout(() => {\n      setLoader(false);\n      // Mock response - Replace with actual API response\n      const mockResult = `// Code Conversion Result\\n\\n` +\n        `// Technology Type: ${codeConvForm.technologyType}\\n` +\n        `// Source Language: ${codeConvForm.sourceLanguage}\\n` +\n        `// Destination Language: ${codeConvForm.destinationLanguage}\\n` +\n        `// Repository: ${codeConvForm.repositoryUrl}\\n\\n` +\n        `// Additional Instructions:\\n// ${codeConvForm.additionalInstructions}\\n\\n` +\n        `// Converted Code:\\n// Original ${codeConvForm.sourceLanguage} code has been converted to ${codeConvForm.destinationLanguage}\\n\\n` +\n        `function convertedCode() {\\n  // Your converted code will appear here\\n  console.log('Code converted from ${codeConvForm.sourceLanguage} to ${codeConvForm.destinationLanguage}!');\\n}\\n\\nexport default convertedCode;`;\n\n      setCodeConvResult(mockResult);\n      setCodeConvModalShow(true);\n\n      setNotification({\n        show: true,\n        body: \"Code converted successfully!\",\n        type: 'success'\n      });\n    }, 2000);\n  };\n\n  const download = () => {\n    setLoader(true);\n    axios.post(`http://10.31.3.17:5000/download-test-cases`, [], {\n      responseType: 'blob'\n\n    }).then(res => {\n      setLoader(false);\n      if (res.status === 200) {\n        const url = window.URL.createObjectURL(new Blob([res.data], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" }));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'test_cases.xlsx'); // Name of the file to be downloaded\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setNotification({\n          show: true,\n          body: \"Downloaded Successfully\",\n          type: 'success'\n        })\n      } else {\n        setNotification({\n          show: true,\n          body: \"Something went wrong !!\",\n          type: 'danger'\n        })\n      }\n\n    })\n  }\n  const [responseShow, setResponseShow] = useState(false);\n\n  const handleResClose = () => setResponseShow(false);\n  const handleCodeGenClose = () => setCodeGenModalShow(false);\n  const handleCodeConvClose = () => setCodeConvModalShow(false);\n\n  // Code Generation Content Component\n  const CodeGenerationContent = () => (\n    <div className=\"code-generation-content\">\n      <form className=\"code-tab-form\" onSubmit={handleCodeGenSubmit}>\n        {/* Row with two dropdowns */}\n        <div className=\"formRow\">\n          <div>\n            <label className=\"formLabel\">Select Technology Type:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeGenForm.technologyType}\n              onChange={(e) => handleTechnologyChange(e.target.value)}\n              required\n            >\n              <option value=\"\">Select Technology Type</option>\n              <option value=\"Frontend\">Frontend</option>\n              <option value=\"Backend\">Backend</option>\n              <option value=\"Database\">Database</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"formLabel\">Select Framework/Code Language:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeGenForm.framework}\n              onChange={(e) => setCodeGenForm({ ...codeGenForm, framework: e.target.value })}\n              required\n              disabled={!codeGenForm.technologyType}\n            >\n              <option value=\"\">Select Framework/Language</option>\n              {codeGenForm.technologyType && frameworkOptions[codeGenForm.technologyType].map((option, index) => (\n                <option key={index} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Repository URL field */}\n        <div>\n          <label className=\"formLabel\">Repository Url/Name:</label>\n          <input\n            type=\"text\"\n            className=\"formfield_select input_dark\"\n            value={codeGenForm.repositoryUrl}\n            onChange={(e) => setCodeGenForm({ ...codeGenForm, repositoryUrl: e.target.value })}\n            placeholder=\"Enter repository URL or name...\"\n          />\n        </div>\n\n        {/* User Requirement field */}\n        <div>\n          <label className=\"formLabel\">User Requirement:</label>\n          <textarea\n            className=\"formfield_ta input_dark\"\n            value={codeGenForm.userRequirement}\n            onChange={(e) => setCodeGenForm({ ...codeGenForm, userRequirement: e.target.value })}\n            placeholder=\"Enter your requirements...\"\n            required\n            rows=\"8\"\n          />\n        </div>\n\n        {/* Generate button */}\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary formButton\">\n            Generate\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n  // Code Conversion Content Component\n  const CodeConversionContent = () => (\n    <div className=\"code-conversion-content\">\n      <form className=\"code-tab-form\" onSubmit={handleCodeConvSubmit}>\n        {/* Technology Type dropdown */}\n        <div>\n          <label className=\"formLabel\">Select Technology Type:</label>\n          <select\n            className=\"formfield_select input_dark\"\n            value={codeConvForm.technologyType}\n            onChange={(e) => handleConvTechnologyChange(e.target.value)}\n            required\n          >\n            <option value=\"\">Select Technology Type</option>\n            <option value=\"Frontend\">Frontend</option>\n            <option value=\"Backend\">Backend</option>\n            <option value=\"Database\">Database</option>\n          </select>\n        </div>\n\n        {/* Row with Source and Destination Language dropdowns */}\n        <div className=\"formRow\">\n          <div>\n            <label className=\"formLabel\">Source Language:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeConvForm.sourceLanguage}\n              onChange={(e) => handleSourceLanguageChange(e.target.value)}\n              required\n              disabled={!codeConvForm.technologyType}\n            >\n              <option value=\"\">Select Source Language</option>\n              {codeConvForm.technologyType && frameworkOptions[codeConvForm.technologyType].map((option, index) => (\n                <option key={index} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label className=\"formLabel\">Destination Language:</label>\n            <select\n              className=\"formfield_select input_dark\"\n              value={codeConvForm.destinationLanguage}\n              onChange={(e) => setCodeConvForm({ ...codeConvForm, destinationLanguage: e.target.value })}\n              required\n              disabled={!codeConvForm.sourceLanguage}\n            >\n              <option value=\"\">Select Destination Language</option>\n              {getDestinationOptions().map((option, index) => (\n                <option key={index} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Repository URL field */}\n        <div>\n          <label className=\"formLabel\">Repository Url/Name:</label>\n          <input\n            type=\"text\"\n            className=\"formfield_select input_dark\"\n            value={codeConvForm.repositoryUrl}\n            onChange={(e) => setCodeConvForm({ ...codeConvForm, repositoryUrl: e.target.value })}\n            placeholder=\"Enter repository URL or name...\"\n          />\n        </div>\n\n        {/* Additional Instructions field - MADE SHORTER */}\n        <div>\n          <label className=\"formLabel\">Add Your Additional Instructions:</label>\n          <textarea\n            className=\"formfield_select input_dark\"\n            value={codeConvForm.additionalInstructions}\n            onChange={(e) => setCodeConvForm({ ...codeConvForm, additionalInstructions: e.target.value })}\n            placeholder=\"Enter your additional instructions...\"\n            rows=\"3\"\n            style={{ height: 'auto', minHeight: '80px' }}\n          />\n        </div>\n\n        {/* Convert button */}\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary formButton\">\n            Convert\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n  console.log(loader, \"loader\")\n  return (\n    <>\n      <Header />\n      <Toast className=\"d-inline-block m-1 toast\" bg={notification.type} onClose={() => setNotification(prevState => ({ ...prevState, show: false }))} show={notification.show} position=\"top-end\" autohide>\n        <Toast.Header>\n          <strong className=\"me-auto\">Success</strong>\n        </Toast.Header>\n        <Toast.Body className='text-white'>{notification.body}</Toast.Body>\n      </Toast>\n\n      {/* Main Tab Navigation */}\n      <div className=\"main-tabs\">\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <button\n              className={`nav-link ${activeTab === 'test-case-generation' ? 'active' : ''}`}\n              onClick={() => setActiveTab('test-case-generation')}\n            >\n              Test Case Generation\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button\n              className={`nav-link ${activeTab === 'code-generation' ? 'active' : ''}`}\n              onClick={() => setActiveTab('code-generation')}\n            >\n              Code Generation\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button\n              className={`nav-link ${activeTab === 'code-conversion' ? 'active' : ''}`}\n              onClick={() => setActiveTab('code-conversion')}\n            >\n              Code Conversion\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"tab-content-wrapper\">\n        {activeTab === 'test-case-generation' && (\n          <div className=\"test-case-gen-content\">\n            <FileUpload handleSubmit={handleSubmit} setNotification={setNotification} />\n          </div>\n        )}\n        {activeTab === 'code-generation' && <CodeGenerationContent />}\n        {activeTab === 'code-conversion' && <CodeConversionContent />}\n      </div>\n\n      {loader && (<div style={{ position: \"absolute\", width: \"100vw\", height: \"100vh\", zIndex: 30, top: 0, 'backgroundColor': \"#00000082\" }}>\n        <div className=\"text-center mt-4\" style={{ position: 'relative', top: '50%' }}>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n\n      </div>)}\n      {\n        // (uploadedFiles.length)?<Response apiResponse={apiResponse}/> : <FileUpload uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles}/>\n      }\n\n      {/* <!--Test Case Response Modal --> */}\n      <Modal show={responseShow} size='xl' onHide={handleResClose} dialogClassName=\"formbody_dark modal_body\" backdrop=\"static\"\n        keyboard={false}>\n        <Modal.Header>\n          <Modal.Title>\n            <ul className=\"nav nav-tabs Restab\">\n              <li className=\"nav-item\">\n                <label className={\"nav-link\" + (resType === 'review' ? \" active\" : \"\")} aria-current=\"page\" onClick={e => setResType('review')}>Review</label>\n              </li>\n              <li className=\"nav-item\">\n                <label className={\"nav-link\" + (resType === 'suggestions' ? \" active\" : \"\")} onClick={e => setResType('suggestions')}>Suggestions</label>\n              </li>\n            </ul>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {(resType === 'review') && <table className='resTable'>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th style={{ width: '10%' }}>Test Step</th>\n                <th>Step Actions</th>\n                <th>Steps Expected</th>\n              </tr>\n            </thead>\n            <tbody>\n              {response.map((ele, key) => {\n                return (<tr key={key}>\n                  <td>{ele.Title}</td>\n                  <td>{ele['Test Step']}</td>\n                  <td>{ele['Step Action']}</td>\n                  <td>{ele['Step Expected']}</td>\n                </tr>)\n              })}\n            </tbody>\n          </table>}\n          {(resType === 'suggestions') && <div><pre className='textWrap'>{suggestions.map((e, index) => <React.Fragment key={index}>{e.suggestion + \"\\n\"}</React.Fragment>)}</pre></div>}\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-primary\" onClick={e => download()}>\n            Download\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleResClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Code Generation Result Modal */}\n      <Modal show={codeGenModalShow} size='xl' onHide={handleCodeGenClose} dialogClassName=\"formbody_dark modal_body\" backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Code Generation Result</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre className='textWrap' style={{ backgroundColor: '#1e1e1e', color: '#d4d4d4', padding: '20px', borderRadius: '5px', fontSize: '14px', fontFamily: 'Consolas, Monaco, monospace' }}>{codeGenResult}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-secondary\" onClick={handleCodeGenClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Code Conversion Result Modal */}\n      <Modal show={codeConvModalShow} size='xl' onHide={handleCodeConvClose} dialogClassName=\"formbody_dark modal_body\" backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Code Conversion Result</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre className='textWrap' style={{ backgroundColor: '#1e1e1e', color: '#d4d4d4', padding: '20px', borderRadius: '5px', fontSize: '14px', fontFamily: 'Consolas, Monaco, monospace' }}>{codeConvResult}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-secondary\" onClick={handleCodeConvClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n\n      <Footer></Footer>\n    </>\n  );\n}\n\nexport default App;\n\n\n// import React from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello, React!</h1>\n//       <p>This is a basic React app.</p>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}